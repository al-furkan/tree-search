#include<bits/stdc++.h>
using namespace std;

struct node{
     int data;
     struct node * left;
     struct node * right;
};


   struct node * creatnode(int value){
      struct node * newnode = new node();
      newnode->data = value;
      newnode->left = NULL;
      newnode->right = NULL;

      return newnode;

   }

   struct node * inserta(struct node* root , int value){

       if(root == NULL){
        return creatnode(value);
      }

        if(value<root->data){
            root->left = inserta(root->left , value);
        }
        else if(value<root->data){
            root->right = inserta(root->right , value);
        }

           return root;
    }

    struct node *searche(struct node*root, int value){
         if(root==NULL || root->data == value){
            return root;
         }
         if(value< root->data){
            return searche(root->left, value);
         }
          else{
            return searche(root->right, value);
         }
    }

    int main() {
    struct node* root = NULL;

    root = inserta(root, 5);
    inserta(root, 3);
    inserta(root, 8);
    inserta(root, 1);
    inserta(root, 4);

    int searchValue = 3;
    struct node* result = searche(root, searchValue);
    if (result != NULL) {
        printf("%d found in the tree.\n", searchValue);
    } else {
        printf("%d not found in the tree.\n", searchValue);
    }
}
